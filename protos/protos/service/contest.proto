syntax = "proto3";

package service.contest;

import "user.proto";
import "google/protobuf/timestamp.proto";

message AuthUserRequest {
	string username = 1;
	string password = 2;
}
message AuthUserResponse {
	message Success {
		string username = 1;
		string fullname = 2;
	}
	message Failure {
		string error = 1;
	}
	oneof response {
		Success success = 1;
		Failure failure = 2;
	}
}

message ContestMetadata {
	string name = 1;
	string description = 2;
	optional google.protobuf.Timestamp start_time = 3;
	optional google.protobuf.Timestamp end_time = 4;
}
message GetContestMetadataRequest {}
message GetContestMetadataResponse {
	ContestMetadata metadata = 1;
}

message GetProblemRequest {
	uint32 problem_id = 1;
}
message GetProblemResponse {
 	user.Problem info = 1;
	bytes statement = 2;
}

message GetAnnouncementListRequest {
	optional uint32 problem_id = 1;
}
message GetAnnouncementListResponse {
	repeated user.Message announcements = 1;
}

message GetQuestionListRequest {
	optional uint32 problem_id = 1;
	optional uint32 user_id = 2;
}
message GetQuestionListResponse {
	repeated user.Message questions = 1;
}


message SetUserRequest {
	string username = 1;
	string fullname = 2;
	string password = 3;
}
message SetUserResponse {
	enum Code {
		ADD = 0;
		UPDATE = 1;
	}
	Code code = 1;
}

message SetContestMetadataRequest {
	ContestMetadata metadata = 1;
}
message SetContestMetadataResponse {}

message SetProblemRequest {
	optional user.Problem info = 1;
 	optional bytes statement = 2;
}
message SetProblemResponse {}

message AddMessageRequest {
	user.Message message = 1;
}
message AddMessageResponse {}

service Contest {
	rpc auth_user(AuthUserRequest) returns (AuthUserResponse);
	rpc get_contest_metadata(GetContestMetadataRequest) returns (GetContestMetadataResponse);
	rpc get_problem(GetProblemRequest) returns (GetProblemResponse);
	rpc get_announcement_list(GetAnnouncementListRequest) returns (GetAnnouncementListResponse);
	rpc get_question_list(GetQuestionListRequest) returns (GetQuestionListResponse);

	rpc set_user(SetUserRequest) returns (SetUserResponse);
	rpc set_contest_metadata(SetContestMetadataRequest) returns (SetContestMetadataResponse);
	rpc set_problem(SetProblemRequest) returns (SetProblemResponse);
	rpc add_message(AddMessageRequest) returns (AddMessageResponse);
}
