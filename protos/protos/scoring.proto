syntax = "proto2";

package scoring;

import "common.proto";

// scoring info messages

// Testcase scoring is the checker

message Subtask {
	enum Method {
		MIN = 0; // min score among all testcases
		SUM = 1; // sum of all testcases
	}
	required Method method = 1;
	required common.Score max_score = 2; // weight of a subtask, calculated score gets transformed linearly in [0,max_score]
}

// Submission scoring same as Problem, considering only the single submission

message Problem {
	enum Method {
		SUM_MAX = 0; // sum maximum of each subtask across submissions
		MAX_SUM = 1; // max sum of all subtasks for each submission
	}
	required Method method = 1;
}

message User {
	message Method {
	// total score for a single element will be sum/max among problems of score_weight*score, wrong_submission_count_weight*non_ac_subs, time_secs_weight*last_score_changing_sub
		enum Aggregation {
			SUM = 0;
			MAX = 1;
		}
		required Aggregation aggregation_method = 1;
		required common.Score score_weight = 2;
		required common.Score wrong_submission_count_weight = 3;
		required common.Score time_secs_weight = 4;
	}
	required Method main = 1; // users will be ranked by decreasing (main,tiebreakers[0],tiebreakers[1],...)
	repeated Method tiebreakers = 2;
}

