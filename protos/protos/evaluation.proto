syntax = "proto2";

package evaluation;

import "common.proto";
import "scoring.proto";

message Submission {
	required string user = 1;
	required uint64 problem_id = 2;
	required common.Source source = 3;
}
message TestcaseResult {
	enum Outcome {
		NONE = 0; // something went wrong
		OK = 1;
		TLE = 2; // time limit exceeded
		MLE = 3; // memory limit exceeded
		RTE = 4; // runtime error
		CHECKER_ERROR = 5; // separate different errors?
	}
	required Outcome outcome = 1;
	required scoring.OneOfScore score = 2;
	required common.Resources used_resources = 3;
}
message CompilationResult {
	enum Outcome {
		NONE = 0;
		SUCCESS = 1;
		REJECTED = 2; // could be useful for checks on source code (eg: no pragmas)
		TLE = 3;
		MLE = 4;
		RTE = 5; // bad stuff but could happen
	}
	required Outcome outcome = 1;
	required common.Resources used_resources = 2;
	optional string error_message = 3;
}

message SubtaskResult {
	repeated TestcaseResult testcase_results = 1;
	required scoring.OneOfScore score = 2;
}

message EvaluationResult {
	required CompilationResult compilation_result = 1;
	// if compilation doesn't succeed, then subtask_results is empty
	repeated SubtaskResult subtask_results = 2; 
	required scoring.OneOfScore score = 3;
}
